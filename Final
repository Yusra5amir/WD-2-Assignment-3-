//Qno :1
/*let score = 100;
let result = score >= 80 ? "truse" : "false";
console.log(result)*/


//Qno :2
/* const obj = {
  person: {
    name: 'yusra',
    address: {
      city: 'karachi',
      country:'Pakistan'
    }        
  }
};
const data = obj?.person?.address?.city; 
console.log(data); */

//Qno:3
// for-in loop:
/*const obj = { a: 1, b: 2, c: 3 };

for (const key in obj) {
  console.log(key); 
  console.log(obj[key]);
}

//for-of loop
const arr = [1, 2, 3];

for (const value of arr) {
  console.log(value); 
} */


//Qno :4
/* function calculateAverage(numbers) {
  if (numbers.length === 0) {
    return 0; 
  }

  let sum = numbers.reduce((total, num) => total + num, 0);
  let average = sum / numbers.length;

  return average;
}
 
let numbersArray = [10, 20, 30, 40, 50];
let result = calculateAverage(numbersArray);
console.log(result);  */

//Qno:5
/* function outerFunction() {
  let outerVariable = 'I am from outer function';

  function innerFunction() {
    console.log(outerVariable);
  }

  return innerFunction;
}

const closureExample = outerFunction();
closureExample(); */


//Qno:6
/* let student = {
  name: "Yusra",
  age: 19,
  grades: [85, 90, 92, 88, 95],

 
  calculateAverage: function () {
    let sum = this.grades.reduce((acc, grade) => acc + grade, 0);
    return sum / this.grades.length;
  }
};
console.log(`${student.name}'s average grade is: ${student.calculateAverage()}`) */;


//Qno:7
//Deep copy
/* let originalObject = { name: 'John', age: 25, hobbies: { sports: 'tennis', music: 'guitar' } };

let deepCopyObject = JSON.parse(JSON.stringify(originalObject)); 

//Shallow copy
let originalObject = { name: 'John', age: 25, hobbies: { sports: 'tennis', music: 'guitar' } };

let shallowCopyObject = Object.assign({}, originalObject); 


//Refrence copy
 let originalObject = { name: 'John', age: 25, hobbies: { sports: 'tennis', music: 'guitar' } };

let referenceCopyObject = originalObject;*/


//Qno:8
/* const numbers = [1, 2, 3, 4, 5];

for (const number of numbers) {
  const result = number % 2 === 0 ? 'even' : 'odd';
  console.log(`${number} is ${result}`);
}
  */


//Qno:9
/* const users = [
  { name: 'yusra', age: 19, address: { city: 'lahore' } },
  { name: 'laiba', age: 25 },
  { name: 'abira', age: 16, address: { city: 'karachi' } },
];

for (const user of users) {
  const cityName = user?.address?.city ?? 'Unknown';
  console.log(`${user.name}'s city is ${cityName}`);
} */


//Qno:10
/* const data = [
  { name: 'asma', details: { age: 28, address: { city: 'karachi' } } },
  { name: 'laiba', details: { age: 35 } },
  { name: 'abira', details: { age: 22, address: { city: 'Unknown City' } } },
  { name: 'meerab', details: { age: 30, address: {} } },
];

for (const entry of data) {
  const cityName = entry?.details?.address?.city ?? 'City Not Available';
  console.log(`${entry.name}'s city is ${cityName}`);
} */


//Qno:11
 /* const myObject = {
  key1: 'value1',
  key2: 'value2',
  key3: 'value3'
};

for (const key in myObject) {
  if (myObject.hasOwnProperty(key)) {
    console.log(`${key}: ${myObject[key]}`);
  }
}
 */
 
 
//Qno:12
/* for (let i = 0; i < 10; i++) {
  if (i === 5) {
    break;
  }
  console.log(i);
}
 
for (let i = 0; i < 5; i++) {
  if (i === 2) {
    continue; 
  }
  console.log(i);
}
*/

//Qno13
/* function calculateTax(income) {
  const taxRate = income > 50000 ? 0.2 : income > 20000 ? 0.15 : 0.1;
  const taxAmount = income * taxRate;
  return taxAmount;
}

const income1 = 25000;
const tax1 = calculateTax(income1);
console.log(`Tax for income $${income1}: $${tax1}`);

const income2 = 60000;
const tax2 = calculateTax(income2);
console.log(`Tax for income $${income2}: $${tax2}`); */


//Qno:14
/* const car = {
  make: 'Toyota',
  model: 'Camry',
  startEngine: function() {
    console.log('Engine started. Vroom vroom!');
  }
};
car.startEngine(); */
